version: "3.9"

services:
  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    ports:
      - "8001:80"
    extra_hosts:
      - ${host_docker_internal:-host_docker_internal}:host-gateway

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: docker/front/Dockerfile
    ports:
      - "3000:3000"
#    volumes:
#      - ./frontend:/app
#      - /app/.cache/frontend
#      - /app/frontend/server/www/static_frontend
#      - /app/node_modules
    depends_on:
      - nginx
    env_file: .env
    extra_hosts:
      - ${host_docker_internal:-host_docker_internal}:host-gateway

  postgres:
    container_name: postgres
    build: docker/postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=pyprod
    restart: on-failure

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./pyprod_fastapi/:/pyprod/
    depends_on:
      - postgres
      - nginx
    env_file: .env
    extra_hosts:
      - ${host_docker_internal:-host_docker_internal}:host-gateway
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --workers 1 --reload

volumes:
  postgres_db:
